version: '3.8'
services:
  backend:
    build: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - mysql
      - mongo
    environment:
      - POSTGRES_HOST=postgres
      - MYSQL_HOST=mysql
      - MONGO_HOST=mongo
      - SQLITE_PATH=/data/sqlite.db
    volumes:
      - ./backend:/app
      - sqlite_data:/data
    entrypoint: ["/bin/sh", "-c", "sqlite3 /data/sqlite.db < /app/../db/sqlite/init.sql && exec uvicorn main:app --host 0.0.0.0 --port 8000"]

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: testdb
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    - ./db/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: testdb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    - ./db/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  mongo:
    image: mongo:6
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: user
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    - ./db/mongo/seed.js:/docker-entrypoint-initdb.d/seed.js:ro

volumes:
  pg_data:
  mysql_data:
  mongo_data:
  sqlite_data:
